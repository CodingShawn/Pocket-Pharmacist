{"version":3,"sources":["utils/utils.js","components/DisplayResults.js","components/Loading.js","components/SearchForm.js","components/Header.js","components/Footer.js","services/therapeuticProductsListing.js","App.js","index.js"],"names":["parserUtils","seperateComponents","string","replace","parseString","replaceAmpersand","substring","length","removeQuotations","toUpperCase","DisplayResults","results","searchTerm","parsedRows","map","result","index","id","row","Object","keys","forEach","key","title","data","columns","name","label","options","display","resizableColumns","filter","rowsPerPage","rowsPerPageOptions","responsive","selectableRows","textLabels","body","noMatch","Loading","useState","rotation","setRotation","updateRotation","timer","setTimeout","clearTimer","clearTimeout","useEffect","targetClass","document","getElementById","style","transform","rotateHourGlass","color","padding","SearchForm","setResults","setSearchTerm","isLoading","drugName","setDrugName","hasSearched","setHasSearched","saveResultsToState","record","active_ingredients","includes","product_name","onSubmit","event","preventDefault","TextField","type","onChange","target","value","autoFocus","required","IconButton","Header","Footer","d","Date","todayDate","getDate","getMonth","getFullYear","attribution","href","BASE_URL","therapeuticProductsListingService","searchViaField","searchField","a","request","params","q","axios","get","response","records","getDrug","searchViaProductName","searchViaActiveIngredient","concat","getAllDrugs","limit","App","setData","setIsLoading","drugs","formattedData","formatData","drug","field","setDrugData","ReactDOM","render","StrictMode"],"mappings":"4RAoCA,IAUeA,EAVK,CAAEC,mBAJf,SAA4BC,GACjC,OAAOA,EAAOC,QAAQ,KAAM,OAGYC,YAR1C,SAAqBF,GACnB,OALF,SAA0BA,GACxB,OAAOA,EAAOC,QAAQ,MAAO,MAItBE,CAVT,SAA0BH,GAExB,OAAOA,EAAOI,UAAU,EAAGJ,EAAOK,OAAS,GAQnBC,CAAiBN,IAASO,gB,QCuDrCC,MAjFf,YAAkD,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAK3BC,EAJOF,EAAQG,KAAI,SAACC,EAAQC,GAChC,OAAO,2BAAKD,GAAZ,IAAoBE,GAAID,OAGFF,KAAI,SAACI,GAU3B,OATAC,OAAOC,KAAKF,GAAKG,SAAQ,SAAUC,GACT,kBAAbJ,EAAII,IAA6B,4BAARA,IAClCJ,EAAII,GAAOtB,EAAYI,YAAYc,EAAII,IAC3B,uBAARA,GAAwC,aAARA,IAElCJ,EAAII,GAAOtB,EAAYC,mBAAmBiB,EAAII,SAI7CJ,KA2CT,OACE,cAAC,IAAD,CACEK,MAAK,8BAAyBX,EAAzB,KACLY,KAAMX,EACNY,QA5CY,CACd,CACEC,KAAM,eACNC,MAAO,gBAET,CACED,KAAM,qBACNC,MAAO,sBAET,CACED,KAAM,WACNC,MAAO,YAET,CACED,KAAM,cACNC,MAAO,eAET,CACED,KAAM,0BACNC,MAAO,0BACPC,QAAS,CACPC,SAAS,IAGb,CACEH,KAAM,eACNC,MAAO,eACPC,QAAS,CACPC,SAAS,IAGb,CACEH,KAAM,0BACNC,MAAO,0BACPC,QAAS,CACPC,SAAS,KAUXD,QAAS,CACPE,kBAAkB,EAClBC,QAAQ,EACRC,YAAa,GACbC,mBAAoB,CAAC,GAAI,IACzBC,WAAY,WACZC,eAAgB,OAChBC,WAAY,CACVC,KAAM,CACJC,QACE,6E,sDCpCCC,MArCf,WACE,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,SAASC,IACUD,EAAjBD,EAAW,IAAkBA,EAAW,GAAkB,GAG5D,SAASG,IACPC,WAAWF,EAAgB,KAG7B,SAASG,IACPC,aAAaH,GAaf,OAVAI,qBAAU,WAER,OADAJ,IACOE,KAGTE,qBAAU,YAxBV,WACE,IAAMC,EAAcC,SAASC,eAAe,YACxCF,IACFA,EAAYG,MAAMC,UAAlB,iBAAwCZ,EAAxC,SAsBFa,KAEC,CAACb,IAGF,cAAC,IAAD,CAAoBxB,GAAG,WAAWmC,MAAO,CAAEG,MAAO,mBAAoBC,QAAS,WCwBpEC,MAtDf,YAAqE,IAA/CC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,cAAenC,EAAmB,EAAnBA,KAAMoC,EAAa,EAAbA,UACrD,EAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KACA,EAAsCtB,oBAAS,GAA/C,mBAAOuB,EAAP,KAAoBC,EAApB,KAWA,SAASC,IACP,IAAItD,EAAUa,EAAKO,QAAO,SAACmC,GACzB,OACEA,EAAOC,mBAAmBC,SAASP,EAASpD,gBAC5CyD,EAAOG,aAAaD,SAASP,EAASpD,kBAG1CiD,EAAW/C,GAUb,OAPAqC,qBAAU,WACLe,GACDE,MAGF,CAACL,IAGD,kCACE,uBAAMU,SA5BV,SAAsBC,GACpBA,EAAMC,iBACDZ,GACHK,IAEFD,GAAe,GACfL,EAAcE,IAsBkB5C,GAAG,cAAjC,YACK2C,GAAaG,IACd,qCACE,cAACU,EAAA,EAAD,CACE9C,MAAM,sBACN+C,KAAK,SACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBd,EAAYc,EAAOC,QAC7CA,MAAOhB,EACPiB,WAAS,EACTC,UAAQ,IAEV,cAACC,EAAA,EAAD,CAAYN,KAAK,SAAjB,SACE,cAAC,IAAD,SAILd,GAAaG,GAAe,cAAC,EAAD,UC9CtBkB,MARf,WACE,OACE,iCACE,oBAAIhE,GAAG,SAAP,kCCmCSiE,MAtCf,WACE,IAcMC,EAAI,IAAIC,KACVC,EAAS,UAAMF,EAAEG,UAAR,YAfE,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGuCH,EAAEI,YAA9B,YAA6CJ,EAAEK,eACxDC,EAAW,6FAAyFJ,EAAzF,kFAEf,OACE,yBAAQpE,GAAG,SAAX,UACE,gCACGwE,EAAa,IACd,mBAAGC,KAAK,wCAAR,wDAIF,8EAC8C,IAC5C,mBAAGA,KAAK,wFAAR,yBAEK,IAJP,4C,oCCzBAC,EACJ,mGAEIC,EAAoC,G,SAyB3BC,E,gFAAf,WAA8BC,EAAalF,GAA3C,mBAAAmF,EAAA,6DACQC,EAAU,CACdC,OAAQ,CACNC,EAAE,eAAIJ,EAAclF,KAH1B,SAMyBuF,IAAMC,IAAIT,EAAUK,GAN7C,cAMQK,EANR,OAOUC,EAAYD,EAAS7E,KAAKT,OAA1BuF,QAPV,kBAQSA,GART,4C,sBAvBAV,EAAkCW,QAAlC,uCAA4C,WAAuB3F,GAAvB,mBAAAmF,EAAA,sEACPF,EAAe,eAAgBjF,GADxB,cACpC4F,EADoC,gBAEFX,EACtC,qBACAjF,GAJwC,cAEpC6F,EAFoC,OAMpCJ,EAAWI,EAA0BC,OAAOF,GANR,kBAOnCH,GAPmC,2CAA5C,sDAUAT,EAAkCe,YAAlC,uCAAgD,gCAAAZ,EAAA,6DACxCC,EAAU,CAGdC,OAAQ,CACNW,MAAO,MALmC,SAQvBT,IAAMC,IAAIT,EAAUK,GARG,cAQxCK,EARwC,OAStCC,EAAYD,EAAS7E,KAAKT,OAA1BuF,QATsC,kBAUvCA,GAVuC,2CAAhD,qDAwBeV,QCYAiB,MA7Cf,WACE,MAA8BrE,mBAAS,MAAvC,mBAAO7B,EAAP,KAAgB+C,EAAhB,KACA,EAAoClB,mBAAS,IAA7C,mBAAO5B,EAAP,KAAmB+C,EAAnB,KACA,EAAwBnB,mBAAS,MAAjC,mBAAOhB,EAAP,KAAasF,EAAb,KACA,EAAkCtE,oBAAS,GAA3C,mBAAOoB,EAAP,KAAkBmD,EAAlB,KAJa,4CAWb,8BAAAhB,EAAA,sEACsBH,EAAkCe,cADxD,OACQK,EADR,OAEQC,EAAgBC,EAAWF,GACjCF,EAAQG,GACRF,GAAa,GAJf,4CAXa,sBAkBb,SAASG,EAAWF,GASlB,OARoBA,EAAMlG,KAAI,SAACqG,GAC7B,IAAK,IAAIC,KAASD,EACW,kBAAhBA,EAAKC,KACdD,EAAKC,GAASD,EAAKC,GAAO3G,eAG9B,OAAO0G,KAKX,OAxBAnE,qBAAU,YANG,mCAOXqE,KAEC,IAsBD,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACE3D,WAAYA,EACZC,cAAeA,EACfnC,KAAMA,EACNoC,UAAWA,IAEZjD,GAAW,cAAC,EAAD,CAAgBA,QAASA,EAASC,WAAYA,IAC1D,cAAC,EAAD,QC3CN0G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtE,SAASC,eAAe,W","file":"static/js/main.1c83143e.chunk.js","sourcesContent":["// API returns JSON in following format: {\n//   \"_id\": 4791,\n//   \"license_holder\": \"\\\"GALDERMA SINGAPORE PRIVATE LIMITED\\\"\",\n//   \"atc_code\": \"D10AD53\",\n//   \"approval_date\": \"21/4/2010\",\n//   \"rank\": 0,\n//   \"forensic_classification\": \"Prescription Only\",\n//   \"active_ingredients\": \"\\\"Adapalene&&Benzoyl peroxide\\\"\",\n//   \"strength\": \"\\\"0.10%&&2.50%\\\"\",\n//   \"_full_count\": \"5\",\n//   \"country_of_manufacturer\": \"\\\"FRANCE\\\"\",\n//   \"route_of_administration\": \"TOPICAL\",\n//   \"licence_no\": \"SIN13789P\",\n//   \"product_name\": \"\\\"EPIDUO GEL 0.1%/2.5%\\\"\",\n//   \"manufacturer\": \"\\\"LABORATOIRES GALDERMA\\\"\",\n//   \"dosage_form\": \"\\\"GEL\\\"\"\n// }\n// Need to parse strings accordingly\n\nfunction removeQuotations(string) {\n  // As quotations are always the first and last char, to simply remove those chars\n  return string.substring(1, string.length - 1);\n}\n\nfunction replaceAmpersand(string) {\n  return string.replace(/&&/g, \", \");\n}\n\nfunction parseString(string) {\n  return replaceAmpersand(removeQuotations(string)).toUpperCase();\n}\n\nexport function seperateComponents(string) {\n  return string.replace(/,/g, \"\\n\");\n}\n\nconst parserUtils = { seperateComponents, parseString };\n\n// For testing with jest\n// module.exports = {\n//   removeQuotations,\n//   replaceAmpersand,\n//   parseString,\n//   seperateComponents,\n// };\n\nexport default parserUtils;\n","import MUIDataTable from \"mui-datatables\";\nimport parserUtils from \"../utils/utils\";\n\nfunction DisplayResults({ results, searchTerm }) {\n  const rows = results.map((result, index) => {\n    return { ...result, id: index };\n  });\n\n  const parsedRows = rows.map((row) => {\n    Object.keys(row).forEach(function (key) {\n      if (typeof row[key] === \"string\" && key !== \"forensic_classification\") {\n        row[key] = parserUtils.parseString(row[key]);\n        if (key === \"active_ingredients\" || key === \"strength\") {\n          // To clearly show individual components composition within product\n          row[key] = parserUtils.seperateComponents(row[key]);\n        }\n      }\n    });\n    return row;\n  });\n\n  const columns = [\n    {\n      name: \"product_name\",\n      label: \"Product Name\",\n    },\n    {\n      name: \"active_ingredients\",\n      label: \"Active Ingredients\",\n    },\n    {\n      name: \"strength\",\n      label: \"Strength\",\n    },\n    {\n      name: \"dosage_form\",\n      label: \"Dosage Form\",\n    },\n    {\n      name: \"forensic_classification\",\n      label: \"Forensic Classification\",\n      options: {\n        display: false,\n      },\n    },\n    {\n      name: \"manufacturer\",\n      label: \"Manufacturer\",\n      options: {\n        display: false,\n      },\n    },\n    {\n      name: \"country_of_manufacturer\",\n      label: \"Country of Manufacturer\",\n      options: {\n        display: false,\n      },\n    },\n  ];\n\n  return (\n    <MUIDataTable\n      title={`Search Results for \"${searchTerm}\"`}\n      data={parsedRows}\n      columns={columns}\n      options={{\n        resizableColumns: true,\n        filter: false,\n        rowsPerPage: 20,\n        rowsPerPageOptions: [20, 50],\n        responsive: \"standard\",\n        selectableRows: \"none\",\n        textLabels: {\n          body: {\n            noMatch:\n              \"No records found. Please check if you have spelt the name correctly.\",\n          },\n        },\n      }}\n    />\n  );\n}\n\nexport default DisplayResults;\n","import { useEffect, useState } from \"react\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\n\nfunction Loading() {\n  const [rotation, setRotation] = useState(0);\n\n  function rotateHourGlass() {\n    const targetClass = document.getElementById(\"rotating\");\n    if (targetClass) {\n      targetClass.style.transform = `rotate(${rotation}deg)`;\n    }\n  }\n\n  function updateRotation() {\n    rotation < 315 ? setRotation(rotation + 45) : setRotation(0);\n  }\n\n  function timer() {\n    setTimeout(updateRotation, 250);\n  }\n\n  function clearTimer() {\n    clearTimeout(timer);\n  }\n\n  useEffect(() => {\n    timer();\n    return clearTimer;\n  });\n\n  useEffect(() => {\n    rotateHourGlass();\n    // eslint-disable-next-line\n  }, [rotation]);\n\n  return (\n    <HourglassEmptyIcon id=\"rotating\" style={{ color: \"rgba(0,0,0,0.54)\", padding: \"12px\" }} />\n  );\n}\n\nexport default Loading;\n","import TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Loading from \"../components/Loading\";\nimport { useState, useEffect } from \"react\";\n\nfunction SearchForm({ setResults, setSearchTerm, data, isLoading }) {\n  const [drugName, setDrugName] = useState(\"\");\n  const [hasSearched, setHasSearched] = useState(false);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!isLoading) {\n      saveResultsToState();\n    }\n    setHasSearched(true);\n    setSearchTerm(drugName);\n  }\n\n  function saveResultsToState() {\n    let results = data.filter((record) => {\n      return (\n        record.active_ingredients.includes(drugName.toUpperCase()) ||\n        record.product_name.includes(drugName.toUpperCase())\n      );\n    });\n    setResults(results);\n  }\n\n  useEffect(() => {\n    if(hasSearched) {\n      saveResultsToState();\n    }\n    // eslint-disable-next-line\n  },[isLoading])\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit} id=\"search-form\">\n        {!(isLoading && hasSearched) && (\n          <>\n            <TextField\n              label=\"Drug / Product Name\"\n              type=\"search\"\n              onChange={({ target }) => setDrugName(target.value)}\n              value={drugName}\n              autoFocus\n              required\n            />\n            <IconButton type=\"submit\">\n              <SearchIcon />\n            </IconButton>\n          </>\n        )}\n        {isLoading && hasSearched && <Loading />}\n      </form>\n    </section>\n  );\n}\n\nexport default SearchForm;\n","function Header() {\n  return (\n    <header>\n      <h1 id=\"header\">Pocket Pharmacist</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","function Footer() {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const d = new Date();\n  let todayDate = `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`;\n  let attribution = `* Contains information from Listing of Registered Therapeutic Products accessed on ${todayDate} from Health Sciences Authority which is made available under the terms of the`;\n\n  return (\n    <footer id=\"footer\">\n      <div>\n        {attribution}{\" \"}\n        <a href=\"https://data.gov.sg/open-data-licence\">\n          Singapore Open Data Licence version 1.0\n        </a>\n      </div>\n      <div>\n        ** Data retrieved may be outdated. Refer to{\" \"}\n        <a href=\"http://eservice.hsa.gov.sg/prism/common/enquirepublic/SearchDRBProduct.do?action=load\">\n          HSA website\n        </a>{\" \"}\n        for latest list of health products\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import axios from \"axios\";\n\nconst BASE_URL =\n  \"https://data.gov.sg/api/action/datastore_search?resource_id=3ee20559-372d-42f0-bde9-245e21f7f39b\";\n\nconst therapeuticProductsListingService = {};\n\ntherapeuticProductsListingService.getDrug = async function getDrug(searchTerm) {\n  const searchViaProductName = await searchViaField(\"product_name\", searchTerm);\n  const searchViaActiveIngredient = await searchViaField(\n    \"active_ingredients\",\n    searchTerm\n  );\n  const response = searchViaActiveIngredient.concat(searchViaProductName);\n  return response;\n};\n\ntherapeuticProductsListingService.getAllDrugs = async function getAllDrugs() {\n  const request = {\n    // Default download is 100, set to 100000 to ensure all records downloaded\n    // 5621 products registered as of August 2021\n    params: {\n      limit: 100000,\n    },\n  };\n  const response = await axios.get(BASE_URL, request);\n  const { records } = response.data.result;\n  return records;\n}\n\nasync function searchViaField(searchField, searchTerm) {\n  const request = {\n    params: {\n      q: { [searchField]: searchTerm },\n    },\n  };\n  const response = await axios.get(BASE_URL, request);\n  const { records } = response.data.result;\n  return records;\n}\n\nexport default therapeuticProductsListingService;\n","import { useState, useEffect } from \"react\";\nimport DisplayResults from \"./components/DisplayResults\";\nimport SearchForm from \"./components/SearchForm\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./components.css\";\nimport therapeuticProductsListingService from \"./services/therapeuticProductsListing\";\n\nfunction App() {\n  const [results, setResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setDrugData();\n    // eslint-disable-next-line\n  }, []);\n\n  async function setDrugData() {\n    const drugs = await therapeuticProductsListingService.getAllDrugs();\n    const formattedData = formatData(drugs);\n    setData(formattedData);\n    setIsLoading(false);\n  }\n\n  function formatData(drugs) {\n    let formattedData = drugs.map((drug) => {\n      for (let field in drug) {\n        if (typeof drug[field] === \"string\") {\n          drug[field] = drug[field].toUpperCase();\n        }\n      }\n      return drug;\n    });\n    return formattedData;\n  }\n\n  return (\n    <>\n      <Header />\n      <SearchForm\n        setResults={setResults}\n        setSearchTerm={setSearchTerm}\n        data={data}\n        isLoading={isLoading}\n      />\n      {results && <DisplayResults results={results} searchTerm={searchTerm} />}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}